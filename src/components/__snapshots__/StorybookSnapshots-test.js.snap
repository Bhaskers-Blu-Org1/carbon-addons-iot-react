// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Snapshot tests and console checks Storyshots AddCard handles click 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f9fafb;
  min-width: 12.5rem;
  max-width: 18.75rem;
  max-height: 15.625rem;
  text-align: center;
}

.c0:focus,
.c0:hover {
  border: 1px solid #3d70b2;
}

.c1 {
  width: 3.5rem;
  height: 3.5rem;
  margin-bottom: 1rem;
}

.c2 {
  color: gray;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <a
      className="bx--tile bx--tile--clickable c0"
      onClick={[Function]}
      onKeyDown={[Function]}
    >
      <svg
        alt="Click Me"
        aria-label="Click Me"
        className="c1"
        fill="grey"
        fillRule="evenodd"
        height="16"
        name="add--outline"
        role="img"
        viewBox="0 0 16 16"
        width="16"
      >
        <title>
          Click Me
        </title>
        <path
          d="M8 14.5c3.6 0 6.5-2.9 6.5-6.5S11.6 1.5 8 1.5 1.5 4.4 1.5 8s2.9 6.5 6.5 6.5zM8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
        />
        <path
          d="M7 7V4h2v3h3v2H9v3H7V9H4V7h3z"
        />
      </svg>
      <p
        className="title c2"
      >
        Click Me
      </p>
    </a>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            AddCard
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            handles click
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  AddCard
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClick
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          click
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      title
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          Click Me
                        </span>
                        "
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              AddCard
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    title
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Title to show on the card
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Callback function when icon is clicked
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal big modal 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible big-modal c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Big Modal
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Needs a lot of space to contain all the info
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          Lots of really wide content here...
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c4 bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            big modal
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    BaseModal
                  </span>
                  <span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        isLarge
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        header
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                label
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#22a",
                                  "wordBreak": "break-word",
                                }
                              }
                            >
                              'Big Modal'
                            </span>
                            ,
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                title
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#22a",
                                  "wordBreak": "break-word",
                                }
                              }
                            >
                              'Needs a lot of space to contain all the info'
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        onSubmit
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            submit
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        onClose
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            close
                          </span>
                          }
                        </span>
                      </span>
                      <br />
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Lots of really wide content here...
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    BaseModal
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal custom footer 1`] = `
.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Custom footer
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Custom footer element
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <div>
              custom footer element
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            custom footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Custom footer'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Custom footer element'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          &lt;div /&gt;
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal error states 1`] = `
.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c5.c5.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c5.c5.c5 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c2 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            DataError
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Cannot communicate with server
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--inline-notification bx--inline-notification--error c1"
          kind="error"
          role="alert"
        >
          <div
            className="bx--inline-notification__details"
          >
            <svg
              alt="closes notification"
              aria-label="closes notification"
              className="bx--inline-notification__icon"
              fillRule="evenodd"
              height="16"
              role="img"
              viewBox="0 0 16 16"
              width="16"
            >
              <title>
                closes notification
              </title>
              <path
                d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM3.293 4.707l8 8 1.414-1.414-8-8-1.414 1.414z"
              />
            </svg>
            <div
              className="bx--inline-notification__text-wrapper"
            >
              <p
                className="bx--inline-notification__title"
              >
                Error sending data to server
              </p>
              <div
                className="bx--inline-notification__subtitle"
              >
                
              </div>
            </div>
          </div>
          <button
            className="bx--inline-notification__close-button"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="closes notification"
              aria-label="closes notification"
              className="bx--inline-notification__close-icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                closes notification
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c2"
        >
          <div
            className="c3"
          >
            <button
              className="c4 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c5 bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            error states
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      dataError
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          Error sending data to server
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'DataError'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Cannot communicate with server'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal fetching data 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--loading-overlay"
    >
      <div
        aria-live="assertive"
        className="bx--loading"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <title>
            Loading
          </title>
          <circle
            className={null}
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            fetching data
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      isFetchingData
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal no footer 1`] = `
.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            No footer
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Dialog without footer
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            no footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'No footer'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Dialog without footer'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal sending data 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Sending data
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            We are submitting data to the backend
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c4 bx--btn bx--btn--primary"
              disabled={true}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <div
                aria-live="assertive"
                className="bx--loading bx--loading--small"
              >
                <svg
                  className="bx--loading__svg"
                  viewBox="-75 -75 150 150"
                >
                  <title>
                    Loading
                  </title>
                  <circle
                    className={null}
                    cx="0"
                    cy="0"
                    r="37.5"
                  />
                </svg>
              </div>
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            sending data
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Sending data'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'We are submitting data to the backend'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal warning dialog 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible error-modal c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Scary Operation
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Delete Stuff
          </p>
          <p
            className="bx--modal-content__text"
          >
            Deleting stuff can be hazardous to your health..
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c3 bx--btn bx--btn--danger"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            warning dialog
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      type
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          warn
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Scary Operation'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Delete Stuff'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              helpText
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Deleting stuff can be hazardous to your health..'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced loading 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.c0.c0 svg {
  stroke: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--primary"
      disabled={true}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        aria-live="assertive"
        className="bx--loading bx--loading--small"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <title>
            Loading
          </title>
          <circle
            className={null}
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            loading
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        loading
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced loading with secondary 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--secondary"
      disabled={true}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        aria-live="assertive"
        className="bx--loading bx--loading--small"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <title>
            Loading
          </title>
          <circle
            className={null}
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            loading with secondary
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        kind
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          "
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            secondary
                          </span>
                          "
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        loading
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced not loading 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.c0.c0 svg {
  stroke: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--primary"
      disabled={false}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            not loading
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots Table filter 1`] = `
.c0.c0.c0 th {
  padding-top: 0.5rem;
  padding-bottom: 1.5rem;
}

.c1.c1.c1 {
  border-top: none;
}

.c1.c1.c1 .bx--form-item {
  display: table-cell;
}

.c1.c1.c1 .bx--form-item input {
  min-width: 12.75rem;
}

.c2.c2.c2 {
  background-color: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      style={
        Object {
          "padding": 40,
        }
      }
    >
      <div>
        <div
          className="bx--data-table-v2-container"
        >
          <h4
            className="bx--data-table-v2-header"
          >
            DataTable with toolbar
          </h4>
          <section
            className="bx--table-toolbar"
          >
            <div
              className="bx--toolbar-content"
            >
              <button
                className="bx--btn bx--btn--sm bx--btn--secondary"
                disabled={false}
                onClick={[Function]}
                tabIndex={0}
                type="button"
              >
                Clear All Filters
              </button>
              <button
                className="bx--toolbar-action"
                onClick={[Function]}
              >
                <svg
                  alt="Settings"
                  aria-label="Settings"
                  className="bx--toolbar-action__icon"
                  fillRule="evenodd"
                  height="12"
                  role="img"
                  viewBox="0 0 16 12"
                  width="16"
                >
                  <title>
                    Settings
                  </title>
                  <path
                    d="M8.05 2a2.5 2.5 0 0 1 4.9 0H16v1h-3.05a2.5 2.5 0 0 1-4.9 0H0V2h8.05zm2.45 2a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM3.05 9a2.5 2.5 0 0 1 4.9 0H16v1H7.95a2.5 2.5 0 0 1-4.9 0H0V9h3.05zm2.45 2a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
                  />
                </svg>
              </button>
            </div>
          </section>
          <table
            className="bx--data-table-v2"
          >
            <thead>
              <tr>
                <th
                  scope="col"
                  style={
                    Object {
                      "paddingTop": 16,
                    }
                  }
                >
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-all"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-all"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select All
                      </span>
                    </label>
                  </div>
                </th>
                <th
                  scope="col"
                  style={
                    Object {
                      "paddingTop": 16,
                    }
                  }
                >
                  <span
                    className="bx--table-header-label"
                  >
                    String
                  </span>
                </th>
                <th
                  scope="col"
                  style={
                    Object {
                      "paddingTop": 16,
                    }
                  }
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Date
                  </span>
                </th>
                <th
                  scope="col"
                  style={
                    Object {
                      "paddingTop": 16,
                    }
                  }
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Select
                  </span>
                </th>
                <th
                  scope="col"
                  style={
                    Object {
                      "paddingTop": 16,
                    }
                  }
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Number
                  </span>
                </th>
              </tr>
              <tr
                className="c0"
              >
                <th
                  className="c1"
                  scope="col"
                />
                <th
                  className="c1"
                  scope="col"
                >
                  <div
                    className="bx--form-item"
                  >
                    <label
                      className="bx--label bx--visually-hidden"
                      htmlFor="string"
                    >
                      string
                    </label>
                    <input
                      className="bx--text-input c2"
                      disabled={false}
                      id="string"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      placeholder="pick a string"
                      type="text"
                      value="whiteboard"
                    />
                  </div>
                </th>
                <th
                  className="c1"
                  scope="col"
                >
                  <div
                    className="bx--form-item"
                  >
                    <label
                      className="bx--label bx--visually-hidden"
                      htmlFor="date"
                    >
                      date
                    </label>
                    <input
                      className="bx--text-input c2"
                      disabled={false}
                      id="date"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      placeholder="pick a date"
                      type="text"
                      value=""
                    />
                  </div>
                </th>
                <th
                  className="c1"
                  scope="col"
                >
                  <div
                    aria-label="Choose an item"
                    className="bx--form-item bx--combo-box bx--list-box bx--list-box--light"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="listbox"
                    tabIndex="0"
                  >
                    <div
                      aria-expanded={false}
                      aria-haspopup={true}
                      aria-label="open menu"
                      className="bx--list-box__field"
                      data-toggle={true}
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      role="button"
                      tabIndex="0"
                      type="button"
                    >
                      <input
                        aria-activedescendant={null}
                        aria-autocomplete="list"
                        aria-expanded={false}
                        aria-label="ListBox input field"
                        autoComplete="off"
                        className="bx--text-input"
                        disabled={false}
                        id="downshift-0-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onKeyDown={[Function]}
                        placeholder="pick an option"
                        role="combobox"
                        value="option-B"
                      />
                      <div
                        className="bx--list-box__selection"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="button"
                        tabIndex="0"
                        title="Clear selected item"
                      >
                        <svg
                          alt="Clear selected item"
                          aria-label="Clear selected item"
                          fillRule="evenodd"
                          focusable="false"
                          height="10"
                          role="img"
                          viewBox="0 0 10 10"
                          width="10"
                        >
                          <title>
                            Clear selected item
                          </title>
                          <path
                            d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
                          />
                        </svg>
                      </div>
                      <div
                        className="bx--list-box__menu-icon"
                      >
                        <svg
                          alt="Open menu"
                          aria-label="Open menu"
                          fillRule="evenodd"
                          focusable="false"
                          height="5"
                          role="img"
                          viewBox="0 0 10 5"
                          width="10"
                        >
                          <title>
                            Open menu
                          </title>
                          <path
                            d="M0 0l5 4.998L10 0z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </th>
                <th
                  className="c1"
                  scope="col"
                >
                  <div
                    className="bx--form-item"
                  >
                    <label
                      className="bx--label bx--visually-hidden"
                      htmlFor="number"
                    >
                      number
                    </label>
                    <input
                      className="bx--text-input c2"
                      disabled={false}
                      id="number"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      placeholder="pick a number"
                      type="text"
                      value=""
                    />
                  </div>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-1"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-1"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  1973-03-14T23:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-4"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-4"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  1973-09-04T14:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  16
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-16"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-16"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  1981-04-13T08:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  256
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-22"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-22"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  1988-07-04T06:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  484
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-31"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-31"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2003-08-16T02:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  961
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-34"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-34"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2009-10-20T00:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1156
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-46"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-46"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2040-03-22T03:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  2116
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-52"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-52"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2058-11-08T16:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  2704
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-61"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-61"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2091-01-30T12:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  3721
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-64"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-64"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2102-12-19T19:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  4096
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-76"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-76"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2156-03-15T06:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  5776
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-82"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-82"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2186-03-30T11:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  6724
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-91"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-91"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2235-08-02T07:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  8281
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-94"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-94"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2253-03-03T22:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  8836
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            Table
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            filter
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    div
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        style
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                padding
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              40
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    TableFilter
                  </span>
                  <span />
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    /&gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    div
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              TableFilter
              " Component
            </h2>
            <small>
              No propTypes defined!
            </small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots Table pagination 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      style={
        Object {
          "padding": 40,
        }
      }
    >
      <div>
        <div
          className="bx--data-table-v2-container"
        >
          <h4
            className="bx--data-table-v2-header"
          >
            DataTable with toolbar
          </h4>
          <section
            className="bx--table-toolbar"
          >
            <div
              className="bx--toolbar-content"
            >
              <button
                className="bx--toolbar-action"
              >
                <svg
                  alt="Settings"
                  aria-label="Settings"
                  className="bx--toolbar-action__icon"
                  fillRule="evenodd"
                  height="12"
                  role="img"
                  viewBox="0 0 16 12"
                  width="16"
                >
                  <title>
                    Settings
                  </title>
                  <path
                    d="M8.05 2a2.5 2.5 0 0 1 4.9 0H16v1h-3.05a2.5 2.5 0 0 1-4.9 0H0V2h8.05zm2.45 2a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM3.05 9a2.5 2.5 0 0 1 4.9 0H16v1H7.95a2.5 2.5 0 0 1-4.9 0H0V9h3.05zm2.45 2a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
                  />
                </svg>
              </button>
            </div>
          </section>
          <table
            className="bx--data-table-v2"
          >
            <thead>
              <tr>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-all"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-all"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select All
                      </span>
                    </label>
                  </div>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    String
                  </span>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Date
                  </span>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Select
                  </span>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Number
                  </span>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-1"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-1"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  1973-03-14T23:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-2"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-2"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  1973-04-18T16:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  4
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-3"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-3"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  1973-06-15T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  9
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-4"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-4"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  1973-09-04T14:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  16
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-5"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-5"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  1973-12-17T18:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  25
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-6"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-6"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  1974-04-24T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  36
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-7"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-7"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  1974-09-21T12:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  49
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-8"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-8"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  1975-03-14T03:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  64
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-9"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-9"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  1975-09-26T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  81
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div
          className="bx--pagination"
          disabled={false}
        >
          <div
            className="bx--pagination__left"
          >
            <span
              className="bx--pagination__text"
            >
              Items per page:
            </span>
            <div
              className="bx--form-item"
            >
              <div
                className="bx--select bx--select--inline"
              >
                <label
                  className="bx--label bx--visually-hidden"
                  htmlFor="bx-pagination-select-1"
                >
                  Items per page:
                </label>
                <select
                  className="bx--select-input"
                  id="bx-pagination-select-1"
                  onChange={[Function]}
                  value={10}
                >
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={10}
                  >
                    10
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={20}
                  >
                    20
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={30}
                  >
                    30
                  </option>
                </select>
                <svg
                  alt="open list of options"
                  aria-label="open list of options"
                  className="bx--select__arrow"
                  fillRule="evenodd"
                  height="5"
                  role="img"
                  viewBox="0 0 10 5"
                  width="10"
                >
                  <title>
                    open list of options
                  </title>
                  <path
                    d="M0 0l5 4.998L10 0z"
                  />
                </svg>
              </div>
            </div>
            <span
              className="bx--pagination__text"
            >
              Â |Â Â 
              1-10 of 100 items
            </span>
          </div>
          <div
            className="bx--pagination__right bx--pagination--inline"
          >
            <span
              className="bx--pagination__text"
            >
              1 of 10 pages
            </span>
            <button
              aria-label="Backward"
              className="bx--pagination__button bx--pagination__button--backward"
              disabled={true}
              onClick={[Function]}
            >
              <svg
                alt="Backward"
                aria-label="Backward"
                className="bx--pagination__button-icon"
                fillRule="evenodd"
                height="12"
                role="img"
                viewBox="0 0 7 12"
                width="7"
              >
                <title>
                  Backward
                </title>
                <path
                  d="M1.45 6.002L7 11.27l-.685.726L0 6.003 6.315 0 7 .726z"
                />
              </svg>
            </button>
            <div
              className="bx--form-item"
            >
              <div
                className="bx--select bx--select--inline"
              >
                <label
                  className="bx--label bx--visually-hidden"
                  htmlFor="bx-pagination-select-3"
                >
                  Items per page:
                </label>
                <select
                  className="bx--select-input"
                  id="bx-pagination-select-3"
                  onChange={[Function]}
                  value={1}
                >
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={1}
                  >
                    1
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={2}
                  >
                    2
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={3}
                  >
                    3
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={4}
                  >
                    4
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={5}
                  >
                    5
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={6}
                  >
                    6
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={7}
                  >
                    7
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={8}
                  >
                    8
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={9}
                  >
                    9
                  </option>
                  <option
                    className="bx--select-option"
                    disabled={false}
                    hidden={false}
                    value={10}
                  >
                    10
                  </option>
                </select>
                <svg
                  alt="open list of options"
                  aria-label="open list of options"
                  className="bx--select__arrow"
                  fillRule="evenodd"
                  height="5"
                  role="img"
                  viewBox="0 0 10 5"
                  width="10"
                >
                  <title>
                    open list of options
                  </title>
                  <path
                    d="M0 0l5 4.998L10 0z"
                  />
                </svg>
              </div>
            </div>
            <button
              aria-label="Forward"
              className="bx--pagination__button bx--pagination__button--forward"
              disabled={false}
              onClick={[Function]}
            >
              <svg
                alt="Forward"
                aria-label="Forward"
                className="bx--pagination__button-icon"
                fillRule="evenodd"
                height="12"
                role="img"
                viewBox="0 0 7 12"
                width="7"
              >
                <title>
                  Forward
                </title>
                <path
                  d="M5.569 5.994L0 .726.687 0l6.336 5.994-6.335 6.002L0 11.27z"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            Table
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            pagination
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    div
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        style
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                padding
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              40
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    TablePagination
                  </span>
                  <span />
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    /&gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    div
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              TablePagination
              " Component
            </h2>
            <small>
              No propTypes defined!
            </small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots Table simple 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      style={
        Object {
          "padding": 40,
        }
      }
    >
      <div>
        <div
          className="bx--data-table-v2-container"
        >
          <h4
            className="bx--data-table-v2-header"
          >
            DataTable with toolbar
          </h4>
          <section
            className="bx--table-toolbar"
          >
            <div
              className="bx--toolbar-content"
            >
              <button
                className="bx--toolbar-action"
              >
                <svg
                  alt="Settings"
                  aria-label="Settings"
                  className="bx--toolbar-action__icon"
                  fillRule="evenodd"
                  height="12"
                  role="img"
                  viewBox="0 0 16 12"
                  width="16"
                >
                  <title>
                    Settings
                  </title>
                  <path
                    d="M8.05 2a2.5 2.5 0 0 1 4.9 0H16v1h-3.05a2.5 2.5 0 0 1-4.9 0H0V2h8.05zm2.45 2a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM3.05 9a2.5 2.5 0 0 1 4.9 0H16v1H7.95a2.5 2.5 0 0 1-4.9 0H0V9h3.05zm2.45 2a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"
                  />
                </svg>
              </button>
            </div>
          </section>
          <table
            className="bx--data-table-v2"
          >
            <thead>
              <tr>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-all"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-all"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select All
                      </span>
                    </label>
                  </div>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    String
                  </span>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Date
                  </span>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Select
                  </span>
                </th>
                <th
                  scope="col"
                  style={Object {}}
                >
                  <span
                    className="bx--table-header-label"
                  >
                    Number
                  </span>
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-0"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-0"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  1973-03-03T09:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  0
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-1"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-1"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  1973-03-14T23:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-2"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-2"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  1973-04-18T16:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  4
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-3"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-3"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  1973-06-15T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  9
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-4"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-4"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  1973-09-04T14:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  16
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-5"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-5"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  1973-12-17T18:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  25
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-6"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-6"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  1974-04-24T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  36
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-7"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-7"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  1974-09-21T12:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  49
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-8"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-8"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  1975-03-14T03:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  64
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-9"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-9"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  1975-09-26T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  81
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-10"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-10"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  1976-05-03T19:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  100
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-11"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-11"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  1977-01-01T20:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  121
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-12"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-12"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  1977-09-25T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  144
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-13"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-13"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  1978-07-11T10:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  169
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-14"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-14"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  1979-05-19T22:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  196
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-15"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-15"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  1980-04-19T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  225
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-16"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-16"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  1981-04-13T08:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  256
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-17"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-17"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  1982-04-30T07:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  289
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-18"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-18"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  1983-06-09T09:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  324
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-19"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-19"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  1984-08-10T15:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  361
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-20"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-20"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  1985-11-05T00:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  400
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-21"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-21"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  1987-02-22T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  441
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-22"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-22"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  1988-07-04T06:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  484
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-23"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-23"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  1989-12-07T02:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  529
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-24"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-24"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  1991-06-04T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  576
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-25"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-25"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  1992-12-22T04:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  625
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-26"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-26"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  1994-08-04T11:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  676
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-27"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-27"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  1996-04-08T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  729
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-28"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-28"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  1998-01-05T11:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  784
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-29"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-29"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  1999-10-27T04:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  841
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-30"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-30"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2001-09-09T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  900
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-31"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-31"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2003-08-16T02:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  961
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-32"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-32"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2005-08-14T06:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  1024
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-33"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-33"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2007-09-05T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  1089
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-34"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-34"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2009-10-20T00:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1156
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-35"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-35"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2011-12-27T15:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  1225
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-36"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-36"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2014-03-28T09:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  1296
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-37"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-37"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2016-07-20T07:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1369
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-38"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-38"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2018-12-05T08:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  1444
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-39"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-39"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2021-05-14T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  1521
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-40"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-40"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2023-11-14T22:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1600
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-41"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-41"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2026-06-09T10:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  1681
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-42"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-42"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2029-01-25T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  1764
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-43"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-43"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2031-10-05T20:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  1849
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-44"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-44"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2034-07-08T19:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  1936
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-45"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-45"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2037-05-03T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  2025
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-46"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-46"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2040-03-22T03:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  2116
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-47"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-47"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2043-03-03T12:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  2209
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-48"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-48"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2046-03-07T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  2304
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-49"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-49"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2049-04-02T18:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  2401
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-50"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-50"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2052-05-22T14:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  2500
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-51"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-51"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2055-08-04T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  2601
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-52"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-52"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2058-11-08T16:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  2704
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-53"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-53"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2062-03-07T23:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  2809
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-54"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-54"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2065-07-28T09:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  2916
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-55"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-55"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2069-01-09T23:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  3025
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-56"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-56"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2072-07-17T16:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  3136
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-57"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-57"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2076-02-15T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  3249
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-58"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-58"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2079-10-08T14:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  3364
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-59"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-59"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2083-06-23T18:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  3481
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-60"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-60"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2087-04-01T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  3600
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-61"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-61"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2091-01-30T12:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  3721
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-62"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-62"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2094-12-24T03:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  3844
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-63"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-63"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2098-12-09T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  3969
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-64"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-64"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2102-12-19T19:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  4096
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-65"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-65"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2107-01-20T20:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  4225
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-66"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-66"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2111-03-17T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  4356
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-67"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-67"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2115-06-03T10:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  4489
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-68"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-68"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2119-09-12T22:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  4624
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-69"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-69"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2124-01-15T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  4761
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-70"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-70"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2128-06-11T08:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  4900
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-71"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-71"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2132-11-29T07:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  5041
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-72"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-72"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2137-06-11T09:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  5184
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-73"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-73"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2142-01-14T15:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  5329
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-74"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-74"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2146-09-12T00:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  5476
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-75"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-75"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2151-06-02T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  5625
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-76"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-76"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2156-03-15T06:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  5776
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-77"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-77"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2161-01-19T02:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  5929
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-78"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-78"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2165-12-18T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  6084
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-79"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-79"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2170-12-09T04:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  6241
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-80"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-80"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2175-12-23T11:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  6400
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-81"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-81"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2181-01-28T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  6561
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-82"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-82"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2186-03-30T11:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  6724
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-83"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-83"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2191-06-22T04:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  6889
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-84"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-84"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2196-10-06T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  7056
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-85"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-85"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2202-02-14T02:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  7225
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-86"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-86"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2207-07-17T06:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  7396
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-87"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-87"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2213-01-08T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  7569
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-88"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-88"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2218-07-27T00:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  7744
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-89"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-89"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2224-03-05T15:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  7921
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-90"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-90"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  toyota toyota toyota
                </td>
                <td>
                  2229-11-06T09:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  8100
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-91"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-91"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  helping whiteboard as
                </td>
                <td>
                  2235-08-02T07:33:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  8281
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-92"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-92"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  whiteboard can eat
                </td>
                <td>
                  2241-05-20T08:53:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  8464
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-93"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-93"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  as eat scott
                </td>
                <td>
                  2247-03-31T13:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  8649
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-94"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-94"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  can pinocchio whiteboard
                </td>
                <td>
                  2253-03-03T22:13:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  8836
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-95"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-95"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  bottle toyota bottle
                </td>
                <td>
                  2259-02-28T10:13:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  9025
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-96"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-96"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  eat whiteboard pinocchio
                </td>
                <td>
                  2265-03-19T01:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  9216
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-97"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-97"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  chocolate can helping
                </td>
                <td>
                  2271-04-30T20:53:20.000Z
                </td>
                <td>
                  option-B
                </td>
                <td>
                  9409
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-98"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-98"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  pinocchio eat can
                </td>
                <td>
                  2277-07-04T19:33:20.000Z
                </td>
                <td>
                  option-C
                </td>
                <td>
                  9604
                </td>
              </tr>
              <tr>
                <td>
                  <div
                    className="bx--form-item bx--checkbox-wrapper"
                  >
                    <input
                      checked={false}
                      className="bx--checkbox"
                      id="select-row-row-99"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    <label
                      className="bx--checkbox-label"
                      htmlFor="select-row-row-99"
                      title={null}
                    >
                      <span
                        className="bx--visually-hidden"
                      >
                        Select Row
                      </span>
                    </label>
                  </div>
                </td>
                <td>
                  scott pinocchio chocolate
                </td>
                <td>
                  2283-10-01T21:46:40.000Z
                </td>
                <td>
                  option-A
                </td>
                <td>
                  9801
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            Table
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            simple
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    div
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        style
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                padding
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              40
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    TableSimple
                  </span>
                  <span />
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    /&gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    div
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              TableSimple
              " Component
            </h2>
            <small>
              No propTypes defined!
            </small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots WizardModal basic wizard modal 1`] = `
.c1.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c1.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c1.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c1 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c1 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c1 .bx--modal-content__text {
  font-size: 1rem;
}

.c1 .bx--modal-content {
  min-height: 12.5rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 .bx--progress-step {
  max-width: 150px;
}

.c0 > div + div {
  padding-top: 1rem;
}

.c2 {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-bottom: 7rem;
}

@media (min-height:32.1875rem) {
  .c1 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c1.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0 c1"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Basic Wizard
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Gimme 3 Steps
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          <ul
            className="bx--progress"
          >
            <li
              className="bx--progress-step bx--progress-step--current"
            >
              <svg>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
                <circle
                  cx="12"
                  cy="12"
                  r="6"
                />
                <title>
                  step1
                </title>
              </svg>
              <p
                className="bx--progress-label"
              >
                step1
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step2
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step2
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step3
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step3
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
          </ul>
          <div
            className="c2"
          >
            page 1
          </div>
        </div>
        <div
          className="bx--modal-footer c3"
        >
          <div
            className="c4"
          >
            <button
              className="bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Next
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            WizardModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            basic wizard modal
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Extends BaseModal to add Carbonâ€™s ProgressIndicator and Wizard pages and local state.  Refer to the BaseModal component for additional props that can be passed
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  WizardModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Basic Wizard'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Gimme 3 Steps'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      steps
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          [
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep1
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep2
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep3
                              </span>
                              }
                            </span>
                          </span>
                          ]
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              WizardModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          leftContent
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          nextButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          previousButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          submitButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          cancelButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {
  leftContent: null,
  nextButtonLabel: 'Next',
â€¦
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      leftContent: Anything that will placed to the left of the buttons inside the footer
                    </span>
                    <span>
                      <br />
                       
                      labels: Internationalized string labels for the buttons in the footer
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    steps
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        [
                      </span>
                      <span>
                        <span>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            {
                          </button>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                          >
                            ...
                          </button>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              label
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              content
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              onValidate
                              ?
                              :
                               
                            </span>
                            <span>
                              func
                            </span>
                            ,
                          </div>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            }
                          </button>
                        </span>
                      </span>
                      <span>
                        ]
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      steps for the wizard to take you through
                    </span>
                    <span>
                      <br />
                       
                       label: the label of each step up in the progress bar,
                    </span>
                    <span>
                      <br />
                       
                       content: the wizard page content for each step
                    </span>
                    <span>
                      <br />
                       
                       onValidate: is the callback called to validate that we can leave this step
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots WizardModal custom footer 1`] = `
.c1.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c1.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c1.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c1 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c1 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c1 .bx--modal-content__text {
  font-size: 1rem;
}

.c1 .bx--modal-content {
  min-height: 12.5rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 .bx--progress-step {
  max-width: 150px;
}

.c0 > div + div {
  padding-top: 1rem;
}

.c2 {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-bottom: 7rem;
}

@media (min-height:32.1875rem) {
  .c1 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c1.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0 c1"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Wizard With Custom Footer 
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Gimme 3 Steps
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          <ul
            className="bx--progress"
          >
            <li
              className="bx--progress-step bx--progress-step--current"
            >
              <svg>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
                <circle
                  cx="12"
                  cy="12"
                  r="6"
                />
                <title>
                  step1
                </title>
              </svg>
              <p
                className="bx--progress-label"
              >
                step1
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step2
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step2
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step3
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step3
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
          </ul>
          <div
            className="c2"
          >
            page 1
          </div>
        </div>
        <div
          className="bx--modal-footer c3"
        >
          <div
            className="c4"
          >
            <button
              className="bx--btn bx--btn--primary"
              disabled={false}
              tabIndex={0}
              type="button"
            >
              My Button
            </button>
            <button
              className="bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              I18N Cancel
            </button>
            <button
              className="bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              I18N Next
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            WizardModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            custom footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Extends BaseModal to add Carbonâ€™s ProgressIndicator and Wizard pages and local state.  Refer to the BaseModal component for additional props that can be passed
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  WizardModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Wizard With Custom Footer '
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Gimme 3 Steps'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      steps
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          [
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep1
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep2
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep3
                              </span>
                              }
                            </span>
                          </span>
                          ]
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              leftContent
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            &lt;Button /&gt;
                          </span>
                          ,
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              previousButtonLabel
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'I18N Previous'
                          </span>
                          ,
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              nextButtonLabel
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'I18N Next'
                          </span>
                          ,
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            â€¦
                          </span>
                          <span>
                            <br />
                              
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              WizardModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          leftContent
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          nextButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          previousButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          submitButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          cancelButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {
  leftContent: null,
  nextButtonLabel: 'Next',
â€¦
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      leftContent: Anything that will placed to the left of the buttons inside the footer
                    </span>
                    <span>
                      <br />
                       
                      labels: Internationalized string labels for the buttons in the footer
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    steps
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        [
                      </span>
                      <span>
                        <span>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            {
                          </button>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                          >
                            ...
                          </button>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              label
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              content
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              onValidate
                              ?
                              :
                               
                            </span>
                            <span>
                              func
                            </span>
                            ,
                          </div>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            }
                          </button>
                        </span>
                      </span>
                      <span>
                        ]
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      steps for the wizard to take you through
                    </span>
                    <span>
                      <br />
                       
                       label: the label of each step up in the progress bar,
                    </span>
                    <span>
                      <br />
                       
                       content: the wizard page content for each step
                    </span>
                    <span>
                      <br />
                       
                       onValidate: is the callback called to validate that we can leave this step
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
