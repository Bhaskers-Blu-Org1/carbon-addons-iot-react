// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Snapshot tests and console checks Storyshots AddCard handles click 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f9fafb;
  min-width: 12.5rem;
  max-width: 18.75rem;
  max-height: 15.625rem;
  text-align: center;
}

.c0:focus,
.c0:hover {
  border: 1px solid #3d70b2;
}

.c1 {
  width: 3.5rem;
  height: 3.5rem;
  margin-bottom: 1rem;
}

.c2 {
  color: gray;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <a
      className="bx--tile bx--tile--clickable c0"
      onClick={[Function]}
      onKeyDown={[Function]}
    >
      <svg
        alt="Click Me"
        aria-label="Click Me"
        className="c1"
        fill="grey"
        fillRule="evenodd"
        height="16"
        name="add--outline"
        role="img"
        viewBox="0 0 16 16"
        width="16"
      >
        <title>
          Click Me
        </title>
        <path
          d="M8 14.5c3.6 0 6.5-2.9 6.5-6.5S11.6 1.5 8 1.5 1.5 4.4 1.5 8s2.9 6.5 6.5 6.5zM8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
        />
        <path
          d="M7 7V4h2v3h3v2H9v3H7V9H4V7h3z"
        />
      </svg>
      <p
        className="title c2"
      >
        Click Me
      </p>
    </a>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            AddCard
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            handles click
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  AddCard
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClick
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          click
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      title
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          Click Me
                        </span>
                        "
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              AddCard
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    title
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Title to show on the card
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Callback function when icon is clicked
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal big modal 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible big-modal c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Big Modal
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Needs a lot of space to contain all the info
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          Lots of really wide content here...
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c4 bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            big modal
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    BaseModal
                  </span>
                  <span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        isLarge
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        header
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                label
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#22a",
                                  "wordBreak": "break-word",
                                }
                              }
                            >
                              'Big Modal'
                            </span>
                            ,
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                title
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#22a",
                                  "wordBreak": "break-word",
                                }
                              }
                            >
                              'Needs a lot of space to contain all the info'
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        onSubmit
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            submit
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        onClose
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            close
                          </span>
                          }
                        </span>
                      </span>
                      <br />
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Lots of really wide content here...
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    BaseModal
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal custom footer 1`] = `
.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Custom footer
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Custom footer element
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <div>
              custom footer element
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            custom footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Custom footer'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Custom footer element'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          &lt;div /&gt;
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal error states 1`] = `
.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c5.c5.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c5.c5.c5 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c2 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            DataError
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Cannot communicate with server
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--inline-notification bx--inline-notification--error c1"
          kind="error"
          role="alert"
        >
          <div
            className="bx--inline-notification__details"
          >
            <svg
              alt="closes notification"
              aria-label="closes notification"
              className="bx--inline-notification__icon"
              fillRule="evenodd"
              height="16"
              role="img"
              viewBox="0 0 16 16"
              width="16"
            >
              <title>
                closes notification
              </title>
              <path
                d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM3.293 4.707l8 8 1.414-1.414-8-8-1.414 1.414z"
              />
            </svg>
            <div
              className="bx--inline-notification__text-wrapper"
            >
              <p
                className="bx--inline-notification__title"
              >
                Error sending data to server
              </p>
              <div
                className="bx--inline-notification__subtitle"
              >
                
              </div>
            </div>
          </div>
          <button
            className="bx--inline-notification__close-button"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="closes notification"
              aria-label="closes notification"
              className="bx--inline-notification__close-icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                closes notification
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c2"
        >
          <div
            className="c3"
          >
            <button
              className="c4 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c5 bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            error states
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      dataError
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          Error sending data to server
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'DataError'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Cannot communicate with server'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal fetching data 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--loading-overlay"
    >
      <div
        aria-live="assertive"
        className="bx--loading"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <circle
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            fetching data
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      isFetchingData
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal no footer 1`] = `
.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            No footer
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Dialog without footer
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            no footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'No footer'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Dialog without footer'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal sending data 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Sending data
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            We are submitting data to the backend
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c4 bx--btn bx--btn--primary"
              disabled={true}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <div
                aria-live="assertive"
                className="bx--loading bx--loading--small"
              >
                <svg
                  className="bx--loading__svg"
                  viewBox="-75 -75 150 150"
                >
                  <circle
                    cx="0"
                    cy="0"
                    r="37.5"
                  />
                </svg>
              </div>
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            sending data
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Sending data'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'We are submitting data to the backend'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal warning dialog 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible error-modal c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Scary Operation
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Delete Stuff
          </p>
          <p
            className="bx--modal-content__text"
          >
            Deleting stuff can be hazardous to your health..
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <div
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c3 bx--btn bx--btn--danger"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            warning dialog
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      type
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          warn
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Scary Operation'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Delete Stuff'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              helpText
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Deleting stuff can be hazardous to your health..'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonLabel
                            ?
                            :
                             
                          </span>
                          <span>
                            node
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onSubmit
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Callback to submit the dialog/form
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced loading 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.c0.c0 svg {
  stroke: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--primary"
      disabled={true}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        aria-live="assertive"
        className="bx--loading bx--loading--small"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <circle
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            loading
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        loading
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced loading with secondary 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--secondary"
      disabled={true}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        aria-live="assertive"
        className="bx--loading bx--loading--small"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <circle
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            loading with secondary
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        kind
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          "
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            secondary
                          </span>
                          "
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        loading
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced not loading 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.c0.c0 svg {
  stroke: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--primary"
      disabled={false}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            not loading
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots Table filter 1`] = `
.c0.c0.c0 {
  border-top: none;
}

.c0.c0.c0 .bx--form-item {
  display: table-cell;
}

.c0.c0.c0 .bx--form-item input {
  min-width: 12.75rem;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      style={
        Object {
          "padding": 40,
        }
      }
    >
      <div>
        <section
          className="bx--table-toolbar"
        >
          <div
            aria-label="Table Action Bar"
            className="bx--batch-actions "
          >
            <div
              className="bx--action-list"
            >
              <button
                className="bx--action-list__delete bx--btn bx--btn--primary"
                disabled={false}
                onClick={[Function]}
                tabIndex={0}
                type="button"
              >
                Delete
              </button>
            </div>
            <div
              className="bx--batch-summary"
            >
              <p
                className="bx--batch-summary__para"
              >
                <span
                  data-items-selected={true}
                >
                  0
                </span>
                Â 
                items selected
              </p>
              <button
                className="bx--batch-summary__cancel"
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="bx--toolbar-search-container"
          >
            <div
              className="bx--search bx--search--sm bx--search--light"
              data-search={true}
              role="search"
            >
              <svg
                className="bx--search-magnifier"
                height="16"
                viewBox="0 0 16 16"
                width="16"
              >
                <path
                  d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm4.936-1.27l4.563 4.557-.707.708-4.563-4.558a6.5 6.5 0 1 1 .707-.707z"
                  fillRule="nonzero"
                />
              </svg>
              <label
                className="bx--label"
                htmlFor="search__input-2"
                id="search-input-label-1"
              >
                Search
                <input
                  aria-labelledby="search-input-label-1"
                  className="bx--search-input"
                  id="search__input-2"
                  placeholder="Search"
                  type="text"
                />
              </label>
              <button
                aria-label="Clear search input"
                className="bx--search-close bx--search-close--hidden"
                title="Clear search input"
                type="button"
              >
                <svg
                  height="16"
                  viewBox="0 0 16 16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M8 6.586L5.879 4.464 4.464 5.88 6.586 8l-2.122 2.121 1.415 1.415L8 9.414l2.121 2.122 1.415-1.415L9.414 8l2.122-2.121-1.415-1.415L8 6.586zM8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"
                    fillRule="evenodd"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            className="bx--toolbar-content"
          >
            <button
              className="bx--toolbar-action"
              type="button"
            >
              <svg
                alt="Edit"
                aria-label="Edit"
                className="bx--toolbar-action__icon"
                fillRule="evenodd"
                height="16"
                name="edit"
                role="img"
                viewBox="0 0 16 16"
                width="16"
              >
                <title>
                  Edit
                </title>
                <path
                  d="M7.926 3.38L1.002 9.72V12h2.304l6.926-6.316L7.926 3.38zm.738-.675l2.308 2.304 1.451-1.324-2.308-2.309-1.451 1.329zM.002 9.28L9.439.639a1 1 0 0 1 1.383.03l2.309 2.309a1 1 0 0 1-.034 1.446L3.694 13H.002V9.28zM0 16.013v-1h16v1z"
                />
              </svg>
            </button>
            <button
              className="bx--toolbar-action"
              type="button"
            >
              <svg
                alt="Settings"
                aria-label="Settings"
                className="bx--toolbar-action__icon"
                fillRule="evenodd"
                height="16"
                name="settings"
                role="img"
                viewBox="0 0 15 16"
                width="15"
              >
                <title>
                  Settings
                </title>
                <path
                  d="M7.53 10.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 1a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z"
                />
                <path
                  d="M6.268 2.636l-.313.093c-.662.198-1.28.52-1.822.946l-.255.2-1.427-.754-1.214 1.735 1.186 1.073-.104.31a5.493 5.493 0 0 0-.198 2.759l.05.274L1 10.33l1.214 1.734 1.06-.56.262.275a5.5 5.5 0 0 0 2.42 1.491l.312.093L6.472 15H8.59l.204-1.636.313-.093a5.494 5.494 0 0 0 2.21-1.28l.26-.248 1.09.576 1.214-1.734-1.08-.977.071-.29a5.514 5.514 0 0 0-.073-2.905l-.091-.302 1.15-1.041-1.214-1.734-1.3.687-.257-.22a5.487 5.487 0 0 0-1.98-1.074l-.313-.093L8.59 1H6.472l-.204 1.636zM5.48.876A1 1 0 0 1 6.472 0H8.59a1 1 0 0 1 .992.876l.124.997a6.486 6.486 0 0 1 1.761.954l.71-.375a1 1 0 0 1 1.286.31l1.215 1.734a1 1 0 0 1-.149 1.316l-.688.622a6.514 6.514 0 0 1 .067 2.828l.644.581a1 1 0 0 1 .148 1.316l-1.214 1.734a1 1 0 0 1-1.287.31l-.464-.245c-.6.508-1.286.905-2.029 1.169l-.124.997A1 1 0 0 1 8.59 16H6.472a1 1 0 0 1-.992-.876l-.125-.997a6.499 6.499 0 0 1-2.274-1.389l-.399.211a1 1 0 0 1-1.287-.31L.181 10.904A1 1 0 0 1 .329 9.59l.764-.69a6.553 6.553 0 0 1 .18-2.662l-.707-.64a1 1 0 0 1-.148-1.315l1.214-1.734a1 1 0 0 1 1.287-.31l.86.454a6.482 6.482 0 0 1 1.576-.819L5.48.876z"
                />
              </svg>
            </button>
          </div>
        </section>
        <table
          className="bx--data-table-v2"
        >
          <thead>
            <tr>
              <th>
                <label
                  className="bx--checkbox-label"
                  htmlFor="select-all"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select-all"
                    id="select-all"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  String
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  Date
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  Select
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  number
                </span>
              </th>
            </tr>
            <tr>
              <th
                className="c0"
                scope="col"
              />
              <th
                className="c0"
                scope="col"
              >
                <div
                  className="bx--form-item"
                >
                  <label
                    className="bx--label bx--visually-hidden"
                    htmlFor="string"
                  >
                    string
                  </label>
                  <input
                    className="bx--text-input bx--text__input"
                    disabled={false}
                    id="string"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    placeholder="pick a string"
                    type="text"
                    value=""
                  />
                </div>
              </th>
              <th
                className="c0"
                scope="col"
              >
                <div
                  className="bx--form-item"
                >
                  <label
                    className="bx--label bx--visually-hidden"
                    htmlFor="date"
                  >
                    date
                  </label>
                  <input
                    className="bx--text-input bx--text__input"
                    disabled={false}
                    id="date"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    placeholder="pick a date"
                    type="text"
                    value=""
                  />
                </div>
              </th>
              <th
                className="c0"
                scope="col"
              >
                <div
                  className="bx--form-item"
                >
                  <div
                    className="bx--select"
                  >
                    <label
                      className="bx--label bx--visually-hidden"
                      htmlFor="select"
                    >
                      select
                    </label>
                    <select
                      className="bx--select-input"
                      id="select"
                      onChange={[Function]}
                      value="placeholder-item"
                    >
                      <option
                        className="bx--select-option"
                        disabled={true}
                        hidden={true}
                        value="placeholder-item"
                      >
                        Choose an option
                      </option>
                      <option
                        className="bx--select-option"
                        disabled={false}
                        hidden={false}
                        value="Option A is an option"
                      >
                        Option A is an option
                      </option>
                      <option
                        className="bx--select-option"
                        disabled={false}
                        hidden={false}
                        value="Option B is an option"
                      >
                        Option B is an option
                      </option>
                      <option
                        className="bx--select-option"
                        disabled={false}
                        hidden={false}
                        value="Option C is an option"
                      >
                        Option C is an option
                      </option>
                    </select>
                    <svg
                      alt="open list of options"
                      aria-label="open list of options"
                      className="bx--select__arrow"
                      fillRule="evenodd"
                      height="5"
                      role="img"
                      viewBox="0 0 10 5"
                      width="10"
                    >
                      <title>
                        open list of options
                      </title>
                      <path
                        d="M0 0l5 4.998L10 0z"
                      />
                    </svg>
                  </div>
                </div>
              </th>
              <th
                className="c0"
                scope="col"
              >
                <div
                  className="bx--form-item"
                >
                  <label
                    className="bx--label bx--visually-hidden"
                    htmlFor="number"
                  >
                    number
                  </label>
                  <input
                    className="bx--text-input bx--text__input"
                    disabled={false}
                    id="number"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    placeholder="pick a number"
                    type="text"
                    value=""
                  />
                </div>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-1-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-1-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.001Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-2-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-2-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.004Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-3-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-3-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.009Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-4-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-4-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.016Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                16
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-5-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-5-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                25
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-6-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-6-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.036Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                36
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-7-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-7-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.049Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                49
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-8-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-8-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.064Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                64
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-9-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-9-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.081Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                81
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-10-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-10-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:40.100Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-11-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-11-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.121Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                121
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-12-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-12-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.144Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                144
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-13-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-13-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.169Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                169
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-14-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-14-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.196Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                196
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-15-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-15-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-16-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-16-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.256Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                256
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-17-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-17-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.289Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                289
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-18-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-18-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.324Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                324
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-19-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-19-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.361Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                361
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-20-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-20-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:40.400Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                400
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-21-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-21-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.441Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                441
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-22-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-22-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.484Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                484
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-23-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-23-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.529Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                529
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-24-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-24-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.576Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                576
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-25-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-25-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.625Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                625
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-26-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-26-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.676Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                676
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-27-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-27-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.729Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                729
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-28-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-28-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.784Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                784
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-29-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-29-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.841Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                841
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-30-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-30-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:40.900Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                900
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-31-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-31-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.961Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                961
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-32-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-32-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:41.024Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1024
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-33-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-33-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:41.089Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1089
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-34-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-34-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:41.156Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1156
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-35-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-35-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:41.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-36-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-36-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:41.296Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1296
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-37-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-37-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:41.369Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1369
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-38-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-38-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:41.444Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1444
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-39-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-39-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:41.521Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1521
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-40-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-40-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:41.600Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1600
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-41-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-41-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:41.681Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1681
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-42-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-42-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:41.764Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1764
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-43-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-43-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:41.849Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1849
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-44-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-44-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:41.936Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1936
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-45-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-45-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:42.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2025
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-46-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-46-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:42.116Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2116
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-47-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-47-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:42.209Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2209
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-48-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-48-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:42.304Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2304
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-49-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-49-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:42.401Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2401
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-50-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-50-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:42.500Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2500
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-51-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-51-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:42.601Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2601
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-52-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-52-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:42.704Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2704
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-53-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-53-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:42.809Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2809
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-54-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-54-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:42.916Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2916
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-55-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-55-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:43.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3025
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-56-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-56-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:43.136Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3136
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-57-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-57-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:43.249Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3249
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-58-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-58-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:43.364Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3364
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-59-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-59-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:43.481Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3481
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-60-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-60-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:43.600Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3600
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-61-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-61-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:43.721Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3721
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-62-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-62-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:43.844Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3844
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-63-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-63-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:43.969Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3969
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-64-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-64-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:44.096Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4096
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-65-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-65-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:44.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                4225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-66-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-66-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:44.356Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4356
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-67-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-67-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:44.489Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                4489
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-68-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-68-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:44.624Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4624
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-69-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-69-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:44.761Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                4761
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-70-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-70-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:44.900Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4900
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-71-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-71-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:45.041Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5041
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-72-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-72-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:45.184Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                5184
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-73-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-73-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:45.329Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5329
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-74-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-74-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:45.476Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                5476
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-75-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-75-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:45.625Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5625
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-76-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-76-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:45.776Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                5776
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-77-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-77-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:45.929Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5929
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-78-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-78-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:46.084Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                6084
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-79-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-79-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:46.241Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                6241
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-80-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-80-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:46.400Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                6400
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-81-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-81-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:46.561Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                6561
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-82-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-82-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:46.724Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                6724
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-83-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-83-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:46.889Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                6889
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-84-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-84-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:47.056Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                7056
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-85-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-85-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:47.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                7225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-86-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-86-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:47.396Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                7396
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-87-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-87-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:47.569Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                7569
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-88-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-88-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:47.744Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                7744
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-89-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-89-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:47.921Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                7921
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-90-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-90-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:48.100Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                8100
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-91-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-91-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:48.281Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                8281
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-92-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-92-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:48.464Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                8464
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-93-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-93-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:48.649Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                8649
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-94-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-94-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:48.836Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                8836
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-95-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-95-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:49.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9025
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-96-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-96-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:49.216Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                9216
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-97-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-97-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:49.409Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9409
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-98-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-98-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:49.604Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                9604
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-99-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-99-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:49.801Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9801
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            Table
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            filter
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    div
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        style
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                padding
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              40
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    TableFilter
                  </span>
                  <span />
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    /&gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    div
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              TableFilter
              " Component
            </h2>
            <small>
              No propTypes defined!
            </small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots Table pagination 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      style={
        Object {
          "padding": 40,
        }
      }
    >
      <div>
        <section
          className="bx--table-toolbar"
        >
          <div
            aria-label="Table Action Bar"
            className="bx--batch-actions "
          >
            <div
              className="bx--action-list"
            >
              <button
                className="bx--action-list__delete bx--btn bx--btn--primary"
                disabled={false}
                onClick={[Function]}
                tabIndex={0}
                type="button"
              >
                Delete
              </button>
            </div>
            <div
              className="bx--batch-summary"
            >
              <p
                className="bx--batch-summary__para"
              >
                <span
                  data-items-selected={true}
                >
                  0
                </span>
                Â 
                items selected
              </p>
              <button
                className="bx--batch-summary__cancel"
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="bx--toolbar-search-container"
          >
            <div
              className="bx--search bx--search--sm bx--search--light"
              data-search={true}
              role="search"
            >
              <svg
                className="bx--search-magnifier"
                height="16"
                viewBox="0 0 16 16"
                width="16"
              >
                <path
                  d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm4.936-1.27l4.563 4.557-.707.708-4.563-4.558a6.5 6.5 0 1 1 .707-.707z"
                  fillRule="nonzero"
                />
              </svg>
              <label
                className="bx--label"
                htmlFor="search__input-2"
                id="search-input-label-1"
              >
                Search
                <input
                  aria-labelledby="search-input-label-1"
                  className="bx--search-input"
                  id="search__input-2"
                  placeholder="Search"
                  type="text"
                />
              </label>
              <button
                aria-label="Clear search input"
                className="bx--search-close bx--search-close--hidden"
                title="Clear search input"
                type="button"
              >
                <svg
                  height="16"
                  viewBox="0 0 16 16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M8 6.586L5.879 4.464 4.464 5.88 6.586 8l-2.122 2.121 1.415 1.415L8 9.414l2.121 2.122 1.415-1.415L9.414 8l2.122-2.121-1.415-1.415L8 6.586zM8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"
                    fillRule="evenodd"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            className="bx--toolbar-content"
          >
            <button
              className="bx--toolbar-action"
              type="button"
            >
              <svg
                alt="Edit"
                aria-label="Edit"
                className="bx--toolbar-action__icon"
                fillRule="evenodd"
                height="16"
                name="edit"
                role="img"
                viewBox="0 0 16 16"
                width="16"
              >
                <title>
                  Edit
                </title>
                <path
                  d="M7.926 3.38L1.002 9.72V12h2.304l6.926-6.316L7.926 3.38zm.738-.675l2.308 2.304 1.451-1.324-2.308-2.309-1.451 1.329zM.002 9.28L9.439.639a1 1 0 0 1 1.383.03l2.309 2.309a1 1 0 0 1-.034 1.446L3.694 13H.002V9.28zM0 16.013v-1h16v1z"
                />
              </svg>
            </button>
            <button
              className="bx--toolbar-action"
              type="button"
            >
              <svg
                alt="Settings"
                aria-label="Settings"
                className="bx--toolbar-action__icon"
                fillRule="evenodd"
                height="16"
                name="settings"
                role="img"
                viewBox="0 0 15 16"
                width="15"
              >
                <title>
                  Settings
                </title>
                <path
                  d="M7.53 10.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 1a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z"
                />
                <path
                  d="M6.268 2.636l-.313.093c-.662.198-1.28.52-1.822.946l-.255.2-1.427-.754-1.214 1.735 1.186 1.073-.104.31a5.493 5.493 0 0 0-.198 2.759l.05.274L1 10.33l1.214 1.734 1.06-.56.262.275a5.5 5.5 0 0 0 2.42 1.491l.312.093L6.472 15H8.59l.204-1.636.313-.093a5.494 5.494 0 0 0 2.21-1.28l.26-.248 1.09.576 1.214-1.734-1.08-.977.071-.29a5.514 5.514 0 0 0-.073-2.905l-.091-.302 1.15-1.041-1.214-1.734-1.3.687-.257-.22a5.487 5.487 0 0 0-1.98-1.074l-.313-.093L8.59 1H6.472l-.204 1.636zM5.48.876A1 1 0 0 1 6.472 0H8.59a1 1 0 0 1 .992.876l.124.997a6.486 6.486 0 0 1 1.761.954l.71-.375a1 1 0 0 1 1.286.31l1.215 1.734a1 1 0 0 1-.149 1.316l-.688.622a6.514 6.514 0 0 1 .067 2.828l.644.581a1 1 0 0 1 .148 1.316l-1.214 1.734a1 1 0 0 1-1.287.31l-.464-.245c-.6.508-1.286.905-2.029 1.169l-.124.997A1 1 0 0 1 8.59 16H6.472a1 1 0 0 1-.992-.876l-.125-.997a6.499 6.499 0 0 1-2.274-1.389l-.399.211a1 1 0 0 1-1.287-.31L.181 10.904A1 1 0 0 1 .329 9.59l.764-.69a6.553 6.553 0 0 1 .18-2.662l-.707-.64a1 1 0 0 1-.148-1.315l1.214-1.734a1 1 0 0 1 1.287-.31l.86.454a6.482 6.482 0 0 1 1.576-.819L5.48.876z"
                />
              </svg>
            </button>
          </div>
        </section>
        <table
          className="bx--data-table-v2"
        >
          <thead>
            <tr>
              <th>
                <label
                  className="bx--checkbox-label"
                  htmlFor="select-all"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select-all"
                    id="select-all"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  String
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  Date
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  Select
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  number
                </span>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-1-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-1-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.001Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-2-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-2-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.004Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-3-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-3-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.009Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-4-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-4-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.016Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                16
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-5-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-5-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                25
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-6-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-6-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.036Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                36
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-7-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-7-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.049Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                49
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-8-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-8-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.064Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                64
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-9-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-9-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.081Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                81
              </td>
            </tr>
          </tbody>
        </table>
        <div
          className="bx--pagination"
          data-pagination={true}
        >
          <div
            className="bx--pagination__left"
          >
            <span
              className="bx--pagination__text"
            >
              Items per page:
            </span>
            <div
              className="bx--select bx--select--inline"
            >
              <select
                className="bx--select-input"
                data-items-per-page={true}
                onChange={[Function]}
              >
                <option
                  className="bx--select-option"
                  selected={true}
                  value={10}
                >
                  10
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={20}
                >
                  20
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={30}
                >
                  30
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={40}
                >
                  40
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={50}
                >
                  50
                </option>
              </select>
              <svg
                className="bx--select__arrow"
                height="5"
                viewBox="0 0 10 5"
                width="10"
              >
                <path
                  d="M0 0l5 4.998L10 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
            <span
              className="bx--pagination__text"
            >
              <span>
                |Â 
              </span>
              <span
                data-displayed-item-range={true}
              >
                1-10
              </span>
              Â ofÂ 
              <span
                data-total-items={true}
              >
                100
              </span>
              Â items
            </span>
          </div>
          <div
            className="bx--pagination__right bx--pagination--inline"
          >
            <span
              className="bx--pagination__text"
            >
              <span
                data-displayed-page-number={true}
              >
                1
              </span>
              Â ofÂ 
              <span
                data-total-pages={true}
              >
                10
              </span>
              Â pages
            </span>
            <button
              aria-label="Backward button"
              className="bx--pagination__button bx--pagination__button--backward"
              data-page-backward={true}
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              <svg
                className="bx--pagination__button-icon"
                height="12"
                viewBox="0 0 7 12"
                width="7"
              >
                <path
                  d="M1.45 6.002L7 11.27l-.685.726L0 6.003 6.315 0 7 .726z"
                  fillRule="nonzero"
                />
              </svg>
            </button>
            <div
              className="bx--select bx--select--inline"
            >
              <select
                className="bx--select-input"
                data-page-number-input={true}
              >
                <option
                  className="bx--select-option"
                  selected={true}
                  value={1}
                >
                  1
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={2}
                >
                  2
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={3}
                >
                  3
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={4}
                >
                  4
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={5}
                >
                  5
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={6}
                >
                  6
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={7}
                >
                  7
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={8}
                >
                  8
                </option>
                <option
                  className="bx--select-option"
                  selected={false}
                  value={9}
                >
                  9
                </option>
              </select>
              <svg
                className="bx--select__arrow"
                height="5"
                viewBox="0 0 10 5"
                width="10"
              >
                <path
                  d="M0 0l5 4.998L10 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
            <button
              aria-label="Forward button"
              className="bx--pagination__button bx--pagination__button--forward"
              data-page-forward={true}
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              <svg
                className="bx--pagination__button-icon"
                height="12"
                viewBox="0 0 7 12"
                width="7"
              >
                <path
                  d="M5.569 5.994L0 .726.687 0l6.336 5.994-6.335 6.002L0 11.27z"
                  fillRule="nonzero"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            Table
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            pagination
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    div
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        style
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                padding
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              40
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    TablePagination
                  </span>
                  <span />
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    /&gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    div
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              TablePagination
              " Component
            </h2>
            <small>
              No propTypes defined!
            </small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots Table simple 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      style={
        Object {
          "padding": 40,
        }
      }
    >
      <div>
        <section
          className="bx--table-toolbar"
        >
          <div
            aria-label="Table Action Bar"
            className="bx--batch-actions "
          >
            <div
              className="bx--action-list"
            >
              <button
                className="bx--action-list__delete bx--btn bx--btn--primary"
                disabled={false}
                onClick={[Function]}
                tabIndex={0}
                type="button"
              >
                Delete
              </button>
            </div>
            <div
              className="bx--batch-summary"
            >
              <p
                className="bx--batch-summary__para"
              >
                <span
                  data-items-selected={true}
                >
                  0
                </span>
                Â 
                items selected
              </p>
              <button
                className="bx--batch-summary__cancel"
                onClick={[Function]}
                type="button"
              >
                Cancel
              </button>
            </div>
          </div>
          <div
            className="bx--toolbar-search-container"
          >
            <div
              className="bx--search bx--search--sm bx--search--light"
              data-search={true}
              role="search"
            >
              <svg
                className="bx--search-magnifier"
                height="16"
                viewBox="0 0 16 16"
                width="16"
              >
                <path
                  d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm4.936-1.27l4.563 4.557-.707.708-4.563-4.558a6.5 6.5 0 1 1 .707-.707z"
                  fillRule="nonzero"
                />
              </svg>
              <label
                className="bx--label"
                htmlFor="search__input-2"
                id="search-input-label-1"
              >
                Search
                <input
                  aria-labelledby="search-input-label-1"
                  className="bx--search-input"
                  id="search__input-2"
                  placeholder="Search"
                  type="text"
                />
              </label>
              <button
                aria-label="Clear search input"
                className="bx--search-close bx--search-close--hidden"
                title="Clear search input"
                type="button"
              >
                <svg
                  height="16"
                  viewBox="0 0 16 16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M8 6.586L5.879 4.464 4.464 5.88 6.586 8l-2.122 2.121 1.415 1.415L8 9.414l2.121 2.122 1.415-1.415L9.414 8l2.122-2.121-1.415-1.415L8 6.586zM8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"
                    fillRule="evenodd"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            className="bx--toolbar-content"
          >
            <button
              className="bx--toolbar-action"
              type="button"
            >
              <svg
                alt="Edit"
                aria-label="Edit"
                className="bx--toolbar-action__icon"
                fillRule="evenodd"
                height="16"
                name="edit"
                role="img"
                viewBox="0 0 16 16"
                width="16"
              >
                <title>
                  Edit
                </title>
                <path
                  d="M7.926 3.38L1.002 9.72V12h2.304l6.926-6.316L7.926 3.38zm.738-.675l2.308 2.304 1.451-1.324-2.308-2.309-1.451 1.329zM.002 9.28L9.439.639a1 1 0 0 1 1.383.03l2.309 2.309a1 1 0 0 1-.034 1.446L3.694 13H.002V9.28zM0 16.013v-1h16v1z"
                />
              </svg>
            </button>
            <button
              className="bx--toolbar-action"
              type="button"
            >
              <svg
                alt="Settings"
                aria-label="Settings"
                className="bx--toolbar-action__icon"
                fillRule="evenodd"
                height="16"
                name="settings"
                role="img"
                viewBox="0 0 15 16"
                width="15"
              >
                <title>
                  Settings
                </title>
                <path
                  d="M7.53 10.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm0 1a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z"
                />
                <path
                  d="M6.268 2.636l-.313.093c-.662.198-1.28.52-1.822.946l-.255.2-1.427-.754-1.214 1.735 1.186 1.073-.104.31a5.493 5.493 0 0 0-.198 2.759l.05.274L1 10.33l1.214 1.734 1.06-.56.262.275a5.5 5.5 0 0 0 2.42 1.491l.312.093L6.472 15H8.59l.204-1.636.313-.093a5.494 5.494 0 0 0 2.21-1.28l.26-.248 1.09.576 1.214-1.734-1.08-.977.071-.29a5.514 5.514 0 0 0-.073-2.905l-.091-.302 1.15-1.041-1.214-1.734-1.3.687-.257-.22a5.487 5.487 0 0 0-1.98-1.074l-.313-.093L8.59 1H6.472l-.204 1.636zM5.48.876A1 1 0 0 1 6.472 0H8.59a1 1 0 0 1 .992.876l.124.997a6.486 6.486 0 0 1 1.761.954l.71-.375a1 1 0 0 1 1.286.31l1.215 1.734a1 1 0 0 1-.149 1.316l-.688.622a6.514 6.514 0 0 1 .067 2.828l.644.581a1 1 0 0 1 .148 1.316l-1.214 1.734a1 1 0 0 1-1.287.31l-.464-.245c-.6.508-1.286.905-2.029 1.169l-.124.997A1 1 0 0 1 8.59 16H6.472a1 1 0 0 1-.992-.876l-.125-.997a6.499 6.499 0 0 1-2.274-1.389l-.399.211a1 1 0 0 1-1.287-.31L.181 10.904A1 1 0 0 1 .329 9.59l.764-.69a6.553 6.553 0 0 1 .18-2.662l-.707-.64a1 1 0 0 1-.148-1.315l1.214-1.734a1 1 0 0 1 1.287-.31l.86.454a6.482 6.482 0 0 1 1.576-.819L5.48.876z"
                />
              </svg>
            </button>
          </div>
        </section>
        <table
          className="bx--data-table-v2"
        >
          <thead>
            <tr>
              <th>
                <label
                  className="bx--checkbox-label"
                  htmlFor="select-all"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select-all"
                    id="select-all"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  String
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  Date
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  Select
                </span>
              </th>
              <th>
                <span
                  className="bx--table-header-label"
                >
                  number
                </span>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-1-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-1-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.001Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-2-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-2-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.004Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-3-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-3-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.009Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-4-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-4-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.016Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                16
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-5-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-5-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                25
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-6-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-6-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.036Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                36
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-7-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-7-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.049Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                49
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-8-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-8-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.064Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                64
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-9-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-9-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.081Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                81
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-10-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-10-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:40.100Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-11-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-11-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.121Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                121
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-12-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-12-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.144Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                144
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-13-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-13-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.169Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                169
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-14-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-14-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.196Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                196
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-15-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-15-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-16-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-16-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.256Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                256
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-17-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-17-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.289Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                289
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-18-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-18-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.324Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                324
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-19-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-19-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.361Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                361
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-20-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-20-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:40.400Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                400
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-21-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-21-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.441Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                441
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-22-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-22-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:40.484Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                484
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-23-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-23-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:40.529Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                529
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-24-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-24-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:40.576Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                576
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-25-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-25-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:40.625Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                625
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-26-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-26-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:40.676Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                676
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-27-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-27-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:40.729Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                729
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-28-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-28-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:40.784Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                784
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-29-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-29-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:40.841Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                841
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-30-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-30-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:40.900Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                900
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-31-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-31-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:40.961Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                961
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-32-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-32-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:41.024Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1024
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-33-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-33-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:41.089Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1089
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-34-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-34-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:41.156Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1156
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-35-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-35-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:41.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-36-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-36-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:41.296Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1296
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-37-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-37-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:41.369Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1369
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-38-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-38-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:41.444Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1444
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-39-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-39-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:41.521Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1521
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-40-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-40-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:41.600Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1600
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-41-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-41-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:41.681Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1681
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-42-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-42-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:41.764Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1764
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-43-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-43-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:41.849Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                1849
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-44-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-44-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:41.936Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                1936
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-45-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-45-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:42.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2025
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-46-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-46-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:42.116Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2116
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-47-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-47-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:42.209Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2209
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-48-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-48-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:42.304Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2304
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-49-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-49-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:42.401Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2401
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-50-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-50-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:42.500Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2500
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-51-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-51-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:42.601Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2601
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-52-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-52-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:42.704Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2704
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-53-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-53-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:42.809Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                2809
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-54-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-54-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:42.916Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                2916
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-55-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-55-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:43.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3025
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-56-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-56-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:43.136Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3136
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-57-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-57-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:43.249Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3249
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-58-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-58-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:43.364Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3364
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-59-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-59-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:43.481Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3481
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-60-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-60-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:43.600Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3600
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-61-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-61-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:43.721Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3721
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-62-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-62-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:43.844Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                3844
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-63-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-63-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:43.969Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                3969
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-64-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-64-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:44.096Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4096
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-65-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-65-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:44.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                4225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-66-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-66-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:44.356Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4356
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-67-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-67-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:44.489Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                4489
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-68-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-68-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:44.624Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4624
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-69-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-69-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:44.761Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                4761
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-70-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-70-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:44.900Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                4900
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-71-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-71-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:45.041Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5041
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-72-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-72-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:45.184Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                5184
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-73-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-73-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:45.329Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5329
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-74-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-74-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:45.476Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                5476
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-75-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-75-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:45.625Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5625
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-76-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-76-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:45.776Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                5776
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-77-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-77-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:45.929Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                5929
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-78-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-78-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:46.084Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                6084
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-79-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-79-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:46.241Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                6241
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-80-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-80-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:46.400Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                6400
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-81-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-81-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:46.561Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                6561
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-82-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-82-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:46.724Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                6724
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-83-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-83-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:46.889Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                6889
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-84-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-84-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:47.056Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                7056
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-85-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-85-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:47.225Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                7225
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-86-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-86-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:47.396Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                7396
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-87-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-87-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:47.569Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                7569
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-88-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-88-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:47.744Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                7744
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-89-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-89-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:47.921Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                7921
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-90-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-90-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                toyota toyota toyota
              </td>
              <td>
                1970-01-01T00:16:48.100Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                8100
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-91-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-91-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                helping whiteboard as
              </td>
              <td>
                1970-01-01T00:16:48.281Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                8281
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-92-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-92-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                whiteboard can eat
              </td>
              <td>
                1970-01-01T00:16:48.464Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                8464
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-93-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-93-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                as eat scott
              </td>
              <td>
                1970-01-01T00:16:48.649Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                8649
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-94-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-94-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                can pinocchio whiteboard
              </td>
              <td>
                1970-01-01T00:16:48.836Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                8836
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-95-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-95-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                bottle toyota bottle
              </td>
              <td>
                1970-01-01T00:16:49.025Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9025
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-96-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-96-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                eat whiteboard pinocchio
              </td>
              <td>
                1970-01-01T00:16:49.216Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                9216
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-97-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-97-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                chocolate can helping
              </td>
              <td>
                1970-01-01T00:16:49.409Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9409
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-98-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-98-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                pinocchio eat can
              </td>
              <td>
                1970-01-01T00:16:49.604Z
              </td>
              <td>
                Option A is an option
              </td>
              <td>
                9604
              </td>
            </tr>
            <tr>
              <td>
                <label
                  className="bx--checkbox-label"
                  htmlFor="row-99-checkbox"
                >
                  <input
                    checked={false}
                    className="bx--checkbox"
                    data-event="select"
                    id="row-99-checkbox"
                    onChange={[Function]}
                    onClick={[Function]}
                    type="checkbox"
                  />
                </label>
              </td>
              <td>
                scott pinocchio chocolate
              </td>
              <td>
                1970-01-01T00:16:49.801Z
              </td>
              <td>
                Option B is an option
              </td>
              <td>
                9801
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            Table
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            simple
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    div
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        style
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                padding
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              40
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    TableSimple
                  </span>
                  <span />
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    /&gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    div
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              TableSimple
              " Component
            </h2>
            <small>
              No propTypes defined!
            </small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots WizardModal basic wizard modal 1`] = `
.c1.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c1.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c1.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c1 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c1 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c1 .bx--modal-content__text {
  font-size: 1rem;
}

.c1 .bx--modal-content {
  min-height: 12.5rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 .bx--progress-step {
  max-width: 150px;
}

.c0 > div + div {
  padding-top: 1rem;
}

.c2 {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-bottom: 7rem;
}

@media (min-height:32.1875rem) {
  .c1 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c1.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0 c1"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Basic Wizard
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Gimme 3 Steps
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          <ul
            className="bx--progress"
          >
            <li
              className="bx--progress-step bx--progress-step--current"
            >
              <svg>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
                <circle
                  cx="12"
                  cy="12"
                  r="6"
                />
                <title>
                  step1
                </title>
              </svg>
              <p
                className="bx--progress-label"
              >
                step1
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step2
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step2
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step3
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step3
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
          </ul>
          <div
            className="c2"
          >
            page 1
          </div>
        </div>
        <div
          className="bx--modal-footer c3"
        >
          <div
            className="c4"
          >
            <button
              className="bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Next
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            WizardModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            basic wizard modal
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Extends BaseModal to add Carbonâ€™s ProgressIndicator and Wizard pages and local state.  Refer to the BaseModal component for additional props that can be passed
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  WizardModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Basic Wizard'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Gimme 3 Steps'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      steps
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          [
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep1
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep2
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep3
                              </span>
                              }
                            </span>
                          </span>
                          ]
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              WizardModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          leftContent
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          nextButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          previousButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          submitButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          cancelButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {
  leftContent: null,
  nextButtonLabel: 'Next',
â€¦
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      leftContent: Anything that will placed to the left of the buttons inside the footer
                    </span>
                    <span>
                      <br />
                       
                      labels: Internationalized string labels for the buttons in the footer
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    steps
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        [
                      </span>
                      <span>
                        <span>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            {
                          </button>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                          >
                            ...
                          </button>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              label
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              content
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              onValidate
                              ?
                              :
                               
                            </span>
                            <span>
                              func
                            </span>
                            ,
                          </div>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            }
                          </button>
                        </span>
                      </span>
                      <span>
                        ]
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      steps for the wizard to take you through
                    </span>
                    <span>
                      <br />
                       
                       label: the label of each step up in the progress bar,
                    </span>
                    <span>
                      <br />
                       
                       content: the wizard page content for each step
                    </span>
                    <span>
                      <br />
                       
                       onValidate: is the callback called to validate that we can leave this step
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots WizardModal custom footer 1`] = `
.c1.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c1.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c1.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c1 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c1 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c1 .bx--modal-content__text {
  font-size: 1rem;
}

.c1 .bx--modal-content {
  min-height: 12.5rem;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c3 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 .bx--progress-step {
  max-width: 150px;
}

.c0 > div + div {
  padding-top: 1rem;
}

.c2 {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-bottom: 7rem;
}

@media (min-height:32.1875rem) {
  .c1 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c1.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c1.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0 c1"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Wizard With Custom Footer 
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Gimme 3 Steps
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          <ul
            className="bx--progress"
          >
            <li
              className="bx--progress-step bx--progress-step--current"
            >
              <svg>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
                <circle
                  cx="12"
                  cy="12"
                  r="6"
                />
                <title>
                  step1
                </title>
              </svg>
              <p
                className="bx--progress-label"
              >
                step1
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step2
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step2
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
            <li
              className="bx--progress-step bx--progress-step--incomplete"
            >
              <svg>
                <title>
                  step3
                </title>
                <circle
                  cx="12"
                  cy="12"
                  r="12"
                />
              </svg>
              <p
                className="bx--progress-label"
              >
                step3
              </p>
              <span
                className="bx--progress-line"
              />
            </li>
          </ul>
          <div
            className="c2"
          >
            page 1
          </div>
        </div>
        <div
          className="bx--modal-footer c3"
        >
          <div
            className="c4"
          >
            <button
              className="bx--btn bx--btn--primary"
              disabled={false}
              tabIndex={0}
              type="button"
            >
              My Button
            </button>
            <button
              className="bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              I18N Cancel
            </button>
            <button
              className="bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              I18N Next
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            WizardModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            custom footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Extends BaseModal to add Carbonâ€™s ProgressIndicator and Wizard pages and local state.  Refer to the BaseModal component for additional props that can be passed
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  WizardModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Wizard With Custom Footer '
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Gimme 3 Steps'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      steps
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          [
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 1'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep1
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 2'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep2
                              </span>
                              }
                            </span>
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              {
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  label
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'step3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  content
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#22a",
                                    "wordBreak": "break-word",
                                  }
                                }
                              >
                                'page 3'
                              </span>
                              ,
                              <span>
                                <span
                                  style={
                                    Object {
                                      "color": "#666",
                                    }
                                  }
                                >
                                  onValidate
                                </span>
                              </span>
                              : 
                              <span
                                style={
                                  Object {
                                    "color": "#170",
                                  }
                                }
                              >
                                validateStep3
                              </span>
                              }
                            </span>
                          </span>
                          ]
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              leftContent
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            &lt;Button /&gt;
                          </span>
                          ,
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              previousButtonLabel
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'I18N Previous'
                          </span>
                          ,
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              nextButtonLabel
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'I18N Next'
                          </span>
                          ,
                          <span>
                            <span>
                              <br />
                                
                                
                            </span>
                            â€¦
                          </span>
                          <span>
                            <br />
                              
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onSubmit
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          submit
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              WizardModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          leftContent
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          nextButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          previousButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          submitButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          cancelButtonLabel
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {
  leftContent: null,
  nextButtonLabel: 'Next',
â€¦
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      leftContent: Anything that will placed to the left of the buttons inside the footer
                    </span>
                    <span>
                      <br />
                       
                      labels: Internationalized string labels for the buttons in the footer
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    steps
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        [
                      </span>
                      <span>
                        <span>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            {
                          </button>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                          >
                            ...
                          </button>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              label
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              content
                              
                              :
                               
                            </span>
                            <span>
                              node
                            </span>
                            ,
                          </div>
                          <div
                            style={
                              Object {
                                "marginLeft": 15,
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "whiteSpace": "nowrap",
                                }
                              }
                            >
                              onValidate
                              ?
                              :
                               
                            </span>
                            <span>
                              func
                            </span>
                            ,
                          </div>
                          <button
                            className="css-1sgldz e1i4ski80"
                            onClick={[Function]}
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            }
                          </button>
                        </span>
                      </span>
                      <span>
                        ]
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      steps for the wizard to take you through
                    </span>
                    <span>
                      <br />
                       
                       label: the label of each step up in the progress bar,
                    </span>
                    <span>
                      <br />
                       
                       content: the wizard page content for each step
                    </span>
                    <span>
                      <br />
                       
                       onValidate: is the callback called to validate that we can leave this step
                    </span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
