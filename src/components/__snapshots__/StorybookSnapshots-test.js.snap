// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Snapshot tests and console checks Storyshots AddCard handles click 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f9fafb;
  min-width: 12.5rem;
  max-width: 18.75rem;
  max-height: 15.625rem;
  text-align: center;
}

.c0:focus,
.c0:hover {
  border: 1px solid #3d70b2;
}

.c1 {
  width: 3.5rem;
  height: 3.5rem;
  margin-bottom: 1rem;
}

.c2 {
  color: gray;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <a
      className="bx--tile bx--tile--clickable c0"
      onClick={[Function]}
      onKeyDown={[Function]}
    >
      <svg
        alt="Click Me"
        aria-label="Click Me"
        className="c1"
        fill="grey"
        fillRule="evenodd"
        height="16"
        name="add--outline"
        role="img"
        viewBox="0 0 16 16"
        width="16"
      >
        <title>
          Click Me
        </title>
        <path
          d="M8 14.5c3.6 0 6.5-2.9 6.5-6.5S11.6 1.5 8 1.5 1.5 4.4 1.5 8s2.9 6.5 6.5 6.5zM8 16c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
        />
        <path
          d="M7 7V4h2v3h3v2H9v3H7V9H4V7h3z"
        />
      </svg>
      <p
        className="title c2"
      >
        Click Me
      </p>
    </a>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            AddCard
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            handles click
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  AddCard
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClick
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          click
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      title
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          Click Me
                        </span>
                        "
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              AddCard
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    title
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Title to show on the card
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Callback function when icon is clicked
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal big modal 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible big-modal c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Big Modal
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Needs a lot of space to contain all the info
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-content"
        >
          Lots of really wide content here...
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <p
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c4 bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </p>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            big modal
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    BaseModal
                  </span>
                  <span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        isLarge
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        header
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                label
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#22a",
                                  "wordBreak": "break-word",
                                }
                              }
                            >
                              'Big Modal'
                            </span>
                            ,
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                title
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#22a",
                                  "wordBreak": "break-word",
                                }
                              }
                            >
                              'Needs a lot of space to contain all the info'
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        footer
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            {
                            <span>
                              <span
                                style={
                                  Object {
                                    "color": "#666",
                                  }
                                }
                              >
                                onSubmit
                              </span>
                            </span>
                            : 
                            <span
                              style={
                                Object {
                                  "color": "#170",
                                }
                              }
                            >
                              submit
                            </span>
                            }
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                      <span>
                        <br />
                        Â Â 
                      </span>
                      <span
                        style={Object {}}
                      >
                        onClose
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            close
                          </span>
                          }
                        </span>
                      </span>
                      <br />
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Lots of really wide content here...
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    BaseModal
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal custom footer 1`] = `
.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Custom footer
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Custom footer element
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <p
            className="c2"
          >
            <div>
              custom footer element
            </div>
          </p>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            custom footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Custom footer'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Custom footer element'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          &lt;div /&gt;
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal error states 1`] = `
.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c5.c5.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c5.c5.c5 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c2 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            DataError
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Cannot communicate with server
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--inline-notification bx--inline-notification--error c1"
          kind="error"
          role="alert"
        >
          <div
            className="bx--inline-notification__details"
          >
            <svg
              alt="closes notification"
              aria-label="closes notification"
              className="bx--inline-notification__icon"
              fillRule="evenodd"
              height="16"
              role="img"
              viewBox="0 0 16 16"
              width="16"
            >
              <title>
                closes notification
              </title>
              <path
                d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM3.293 4.707l8 8 1.414-1.414-8-8-1.414 1.414z"
              />
            </svg>
            <div
              className="bx--inline-notification__text-wrapper"
            >
              <p
                className="bx--inline-notification__title"
              >
                Error sending data to server
              </p>
              <div
                className="bx--inline-notification__subtitle"
              >
                
              </div>
            </div>
          </div>
          <button
            className="bx--inline-notification__close-button"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="closes notification"
              aria-label="closes notification"
              className="bx--inline-notification__close-icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                closes notification
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c2"
        >
          <p
            className="c3"
          >
            <button
              className="c4 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c5 bx--btn bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </p>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            error states
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      dataError
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          Error sending data to server
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'DataError'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Cannot communicate with server'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              onSubmit
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            submit
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal fetching data 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--loading-overlay"
    >
      <div
        aria-live="assertive"
        className="bx--loading"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <circle
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            fetching data
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      isFetchingData
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal no footer 1`] = `
.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            No footer
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Dialog without footer
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            no footer
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'No footer'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Dialog without footer'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal sending data 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c4.c4.c4 svg {
  stroke: white;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Sending data
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            We are submitting data to the backend
          </p>
          <p
            className="bx--modal-content__text"
          />
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <p
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c4 bx--btn bx--btn--primary"
              disabled={true}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <div
                aria-live="assertive"
                className="bx--loading bx--loading--small"
              >
                <svg
                  className="bx--loading__svg"
                  viewBox="-75 -75 150 150"
                >
                  <circle
                    cx="0"
                    cy="0"
                    r="37.5"
                  />
                </svg>
              </div>
              Save
            </button>
          </p>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            sending data
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      sendingData
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Sending data'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'We are submitting data to the backend'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              onSubmit
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            submit
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots BaseModal warning dialog 1`] = `
.c3.c3.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.error-modal .bx--modal-container {
  border-top: #e62325 0.25rem solid;
}

.c0.big-modal .bx--modal-header {
  margin-bottom: 0rem;
}

.c0.big-modal .bx--modal-container {
  min-height: 37.5rem;
  min-width: 50rem;
  max-height: 80%;
}

.c0 .bx--btn + .bx--btn {
  margin-left: 1rem;
}

.c0 .bx--modal-header__heading {
  margin-bottom: 0.75rem;
}

.c0 .bx--modal-content__text {
  font-size: 1rem;
}

.c0 .bx--modal-content {
  min-height: 12.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 .modal-greedy-spacer {
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  text-align: left;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-height:32.1875rem) {
  .c0 .bx--modal-container {
    overflow-y: auto;
  }
}

@media (min-width:37.5rem) {
  .c0.big-modal .bx--modal-container {
    height: auto;
  }
}

@media (min-width:64rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 80%;
  }
}

@media (min-width:75rem) {
  .c0.big-modal .bx--modal-container {
    max-width: 60%;
  }
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--modal is-visible error-modal c0"
      onBlur={[Function]}
      onClick={[Function]}
      onClose={[Function]}
      onKeyDown={[Function]}
      onTransitionEnd={[Function]}
      open={true}
      role="presentation"
      tabIndex={-1}
    >
      <div
        className="bx--modal-container"
      >
        <div
          className="bx--modal-header"
        >
          <p
            className="bx--modal-header__label bx--type-delta"
          >
            Scary Operation
          </p>
          <p
            className="bx--modal-header__heading bx--type-beta"
          >
            Delete Stuff
          </p>
          <p
            className="bx--modal-content__text"
          >
            Deleting stuff can be hazardous to your health..
          </p>
          <button
            className="bx--modal-close"
            onClick={[Function]}
            type="button"
          >
            <svg
              alt="Close the modal"
              aria-label="Close the modal"
              className="bx--modal-close__icon"
              fillRule="evenodd"
              height="10"
              role="img"
              viewBox="0 0 10 10"
              width="10"
            >
              <title>
                Close the modal
              </title>
              <path
                d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
              />
            </svg>
          </button>
        </div>
        <div
          className="bx--modal-footer c1"
        >
          <p
            className="c2"
          >
            <button
              className="c3 bx--btn bx--btn--secondary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Cancel
            </button>
            <button
              className="c3 bx--btn bx--btn--danger"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              Save
            </button>
          </p>
        </div>
      </div>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            BaseModal
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            warning dialog
          </h2>
        </div>
        <div
          style={
            Object {
              "marginBottom": 0,
            }
          }
        >
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            Renders a carbon modal dialog.  This dialog adds these additional features on top of the base carbon dialog:
          </div>
          <pre
            className=""
            style={
              Object {
                "backgroundColor": "#fafafa",
                "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                "lineHeight": 1.5,
                "overflowX": "scroll",
                "padding": ".5rem",
              }
            }
          >
            <code
              className=""
              style={
                Object {
                  "backgroundColor": "#fafafa",
                  "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
                }
              }
            >
              - adds header.helpText prop to explain dialog
- adds type prop for warning and error type dialogs
- adds isLarge prop for large and small class styling dialogs
- adds isFetchingData props for loading state
- adds error and dataError prop to display notification about error at bottom of dialog
- if submitFailed prop, it will find and scroll the failing carbon element into view
- shows spinner on primary dialog button if sendingData prop is true
            </code>
          </pre>
          <div
            style={
              Object {
                "WebkitFontSmoothing": "antialiased",
                "color": "#444",
                "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
                "fontSize": "15px",
              }
            }
          >
            We also prevent the dialog from closing if you click outside it.
This dialog can be decorated by reduxDialog HoC and/or reduxForm HoC to automatically populate the fields below marked as
REDUXFORM or REDUXDIALOG
          </div>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  BaseModal
                </span>
                <span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      type
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          warn
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      header
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              label
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Scary Operation'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              title
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Delete Stuff'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              helpText
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Deleting stuff can be hazardous to your health..'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      footer
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              onSubmit
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            submit
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                    <span>
                      <br />
                      Â Â 
                    </span>
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                    <br />
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              BaseModal
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    open
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      true
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Should the dialog be open or not
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    dataError
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Details about the current dataError
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    error
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Form Error Details
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isFetchingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is my data actively loading?
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    sendingData
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        bool
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        string
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Is data currently being sent to the backend
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    clearSubmitErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Clear the currently shown error (from form), triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClearDialogErrors
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Clear the currently shown dataError, triggered if the user closes the ErrorNotification
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'warn' | 'normal'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Type of dialog, affects colors, styles of dialog
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    footer
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <span>
                        element
                      </span>
                      <span>
                         | 
                      </span>
                      <span>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          {
                        </button>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            primaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            secondaryButtonText
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            onSubmit
                            
                            :
                             
                          </span>
                          <span>
                            func
                          </span>
                          ,
                        </div>
                        <button
                          className="css-1sgldz e1i4ski80"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          }
                        </button>
                      </span>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Footer Props
                    </span>
                    <span>
                      <br />
                       
                      Either supply your own footer element or supply an object with button labels and submit handlers and we will make a footer with two buttons for you
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    isLarge
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    NEW PROP: Whether this particular dialog needs to be very large
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    submitFailed
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Did the form submission fail
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    invalid
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXFORM: Is the form currently invalid
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Content to render inside Modal
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    header
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          label
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          title
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          helpText
                          ?
                          :
                           
                        </span>
                        <span>
                          node
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      {}
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span>
                       
                      Header Props
                    </span>
                    <span>
                      <br />
                       
                      label: goes on top of the dialog
                    </span>
                    <span>
                      <br />
                       
                      title: Heading of the dialog
                    </span>
                    <span>
                      <br />
                       
                      helpText, additional information will stay at the top of the screen when scrolling dialog content
                    </span>
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    REDUXDIALOG: Close the dialog
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced loading 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.c0.c0 svg {
  stroke: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--primary"
      disabled={true}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        aria-live="assertive"
        className="bx--loading bx--loading--small"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <circle
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            loading
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        loading
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced loading with secondary 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--secondary"
      disabled={true}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        aria-live="assertive"
        className="bx--loading bx--loading--small"
      >
        <svg
          className="bx--loading__svg"
          viewBox="-75 -75 150 150"
        >
          <circle
            cx="0"
            cy="0"
            r="37.5"
          />
        </svg>
      </div>
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            loading with secondary
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        kind
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          "
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            secondary
                          </span>
                          "
                        </span>
                      </span>
                    </span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        loading
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots ButtonEnhanced not loading 1`] = `
.c0.c0.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
}

.c0.c0.c0 svg {
  stroke: white;
}

<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <button
      className="c0 bx--btn bx--btn--primary"
      disabled={false}
      onClick={[Function]}
      tabIndex={0}
      type="button"
    >
      Test ButtonEnhanced
    </button>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            ButtonEnhanced
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            not loading
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;
                    ButtonEnhanced
                  </span>
                  <span>
                    <span>
                       
                      <span
                        style={Object {}}
                      >
                        onClick
                      </span>
                      <span>
                        =
                        <span
                          style={Object {}}
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#170",
                              }
                            }
                          >
                            click
                          </span>
                          }
                        </span>
                      </span>
                      
                    </span>
                  </span>
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &gt;
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 33,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    Test ButtonEnhanced
                  </span>
                </div>
                <div
                  style={
                    Object {
                      "paddingLeft": 18,
                      "paddingRight": 3,
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "color": "#444",
                      }
                    }
                  >
                    &lt;/
                    ButtonEnhanced
                    &gt;
                  </span>
                </div>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              ButtonEnhanced
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    loading
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Show loading spinner, only new prop
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    disabled
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      bool
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      false
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Disable the button will be auto disabled when loading
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    kind
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      custom
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'primary'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    primary, secondary, etc from carbon
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    children
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      node
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    Button label
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClick
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    yes
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    click handler
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots MessageBox error 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--inline-notification bx--inline-notification--error"
      kind="error"
      role="alert"
    >
      <div
        className="bx--inline-notification__details"
      >
        <svg
          alt="closes notification"
          aria-label="closes notification"
          className="bx--inline-notification__icon"
          fillRule="evenodd"
          height="16"
          role="img"
          viewBox="0 0 16 16"
          width="16"
        >
          <title>
            closes notification
          </title>
          <path
            d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM3.293 4.707l8 8 1.414-1.414-8-8-1.414 1.414z"
          />
        </svg>
        <div
          className="bx--inline-notification__text-wrapper"
        >
          <p
            className="bx--inline-notification__title"
          >
            Error Message
          </p>
          <div
            className="bx--inline-notification__subtitle"
          >
            Details of message
          </div>
        </div>
      </div>
      <button
        className="bx--inline-notification__close-button"
        onClick={[Function]}
        type="button"
      >
        <svg
          alt="closes notification"
          aria-label="closes notification"
          className="bx--inline-notification__close-icon"
          fillRule="evenodd"
          height="10"
          role="img"
          viewBox="0 0 10 10"
          width="10"
        >
          <title>
            closes notification
          </title>
          <path
            d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
          />
        </svg>
      </button>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            MessageBox
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            error
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  MessageBox
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      data
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              message
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Error Message'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              details
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Details of message'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              MessageBox
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'error' | 'info' | 'success' | 'warning'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'error'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    data
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          message
                          
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          details
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots MessageBox warning 1`] = `
<div>
  <div
    style={
      Object {
        "position": "relative",
        "zIndex": 0,
      }
    }
  >
    <div
      className="bx--inline-notification bx--inline-notification--warning"
      kind="warning"
      role="alert"
    >
      <div
        className="bx--inline-notification__details"
      >
        <svg
          className="bx--inline-notification__icon"
          height="20"
          width="20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <defs>
            <path
              d="M18.05 15.95L9.925.95a.625.625 0 0 0-1.1 0L.7 15.95a.625.625 0 0 0 0 .625.625.625 0 0 0 .55.3H17.5a.625.625 0 0 0 .55-.925z"
              id="a"
            />
            <path
              d="M.55.006h1.406v5H.55v-5zm.7 8.119a.938.938 0 1 1 0-1.875.938.938 0 0 1 0 1.875z"
              id="b"
            />
          </defs>
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M18.675 16.575l-8.125-15a.625.625 0 0 0-1.1 0l-8.125 15a.625.625 0 0 0 0 .625.625.625 0 0 0 .55.3h16.25a.625.625 0 0 0 .55-.925z"
              fill="#FDD13A"
            />
            <g>
              <path
                d="M9.3 6.881h1.406v5H9.3v-5zM10 15a.938.938 0 1 1 0-1.875A.938.938 0 0 1 10 15z"
                fill="#171717"
                fillRule="nonzero"
              />
            </g>
            <path
              d="M0 0h20v20H0z"
            />
          </g>
        </svg>
        <div
          className="bx--inline-notification__text-wrapper"
        >
          <p
            className="bx--inline-notification__title"
          >
            Warning Message
          </p>
          <div
            className="bx--inline-notification__subtitle"
          >
            Details of message
          </div>
        </div>
      </div>
      <button
        className="bx--inline-notification__close-button"
        onClick={[Function]}
        type="button"
      >
        <svg
          alt="closes notification"
          aria-label="closes notification"
          className="bx--inline-notification__close-icon"
          fillRule="evenodd"
          height="10"
          role="img"
          viewBox="0 0 10 10"
          width="10"
        >
          <title>
            closes notification
          </title>
          <path
            d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
          />
        </svg>
      </button>
    </div>
  </div>
  <button
    onClick={[Function]}
    style={
      Object {
        "background": "#28c",
        "border": "none",
        "borderRadius": "0 0 0 5px",
        "color": "#fff",
        "cursor": "pointer",
        "display": "block",
        "fontFamily": "sans-serif",
        "fontSize": "12px",
        "padding": "5px 15px",
        "position": "fixed",
        "right": 0,
        "top": 0,
      }
    }
    type="button"
  >
    Show Info
  </button>
  <div
    style={
      Object {
        "background": "white",
        "bottom": 0,
        "display": "none",
        "left": 0,
        "overflow": "auto",
        "padding": "0 40px",
        "position": "fixed",
        "right": 0,
        "top": 0,
        "zIndex": 99999,
      }
    }
  >
    <button
      onClick={[Function]}
      style={
        Object {
          "background": "#28c",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": "12px",
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Ã—
    </button>
    <div>
      <div
        style={
          Object {
            "WebkitFontSmoothing": "antialiased",
            "backgroundColor": "#fff",
            "border": "1px solid #eee",
            "borderRadius": "2px",
            "color": "#444",
            "fontFamily": "-apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", BlinkMacSystemFont, \\"Segoe UI\\", \\"Roboto\\", \\"Oxygen\\", \\"Ubuntu\\", \\"Cantarell\\", \\"Fira Sans\\", \\"Droid Sans\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", \\"Arial\\", sans-serif",
            "fontSize": "15px",
            "fontWeight": 300,
            "lineHeight": 1.45,
            "marginBottom": "20px",
            "marginTop": "20px",
            "padding": "20px 40px 40px",
          }
        }
      >
        <div
          style={
            Object {
              "borderBottom": "1px solid #eee",
              "marginBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <h1
            style={
              Object {
                "fontSize": "35px",
                "margin": 0,
                "padding": 0,
              }
            }
          >
            MessageBox
          </h1>
          <h2
            style={
              Object {
                "fontSize": "22px",
                "fontWeight": 400,
                "margin": "0 0 10px 0",
                "padding": 0,
              }
            }
          >
            warning
          </h2>
        </div>
        
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Story Source
          </h1>
          <pre
            className="css-r8d96o eyvlbql0"
          >
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 18,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  &lt;
                  MessageBox
                </span>
                <span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      type
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        "
                        <span
                          style={
                            Object {
                              "color": "#22a",
                              "wordBreak": "break-word",
                            }
                          }
                        >
                          warning
                        </span>
                        "
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      data
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              message
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Warning Message'
                          </span>
                          ,
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#666",
                                }
                              }
                            >
                              details
                            </span>
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            'Details of message'
                          </span>
                          }
                        </span>
                        }
                      </span>
                    </span>
                  </span>
                  <span>
                     
                    <span
                      style={Object {}}
                    >
                      onClose
                    </span>
                    <span>
                      =
                      <span
                        style={Object {}}
                      >
                        {
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          close
                        </span>
                        }
                      </span>
                    </span>
                     
                  </span>
                </span>
                <span
                  style={
                    Object {
                      "color": "#444",
                    }
                  }
                >
                  /&gt;
                </span>
              </div>
            </div>
            <button
              className="css-1naocv3 eva467m0"
              onClick={[Function]}
            >
              <div
                className="css-lvl6aa eva467m1"
              >
                <div
                  style={
                    Object {
                      "marginBottom": 6,
                    }
                  }
                >
                  Copied!
                </div>
                <div>
                  Copy
                </div>
              </div>
            </button>
          </pre>
        </div>
        <div>
          <h1
            style={
              Object {
                "borderBottom": "1px solid #EEE",
                "fontSize": "25px",
                "margin": "20px 0 0 0",
                "padding": "0 0 5px 0",
              }
            }
          >
            Prop Types
          </h1>
          <div>
            <h2
              style={
                Object {
                  "margin": "20px 0 0 0",
                }
              }
            >
              "
              MessageBox
              " Component
            </h2>
            <table
              className="css-1uhv8nx e1vdo5380"
            >
              <thead>
                <tr>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    property
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    propType
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    required
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    default
                  </th>
                  <th
                    className="css-11b5gui e6fp4ir1"
                  >
                    description
                  </th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    type
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      oneOf 'error' | 'info' | 'success' | 'warning'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      'error'
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    data
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        {
                      </button>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                      >
                        ...
                      </button>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          message
                          
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <div
                        style={
                          Object {
                            "marginLeft": 15,
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "whiteSpace": "nowrap",
                            }
                          }
                        >
                          details
                          ?
                          :
                           
                        </span>
                        <span>
                          string
                        </span>
                        ,
                      </div>
                      <button
                        className="css-1sgldz e1i4ski80"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        }
                      </button>
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    className
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      string
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
                <tr>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    onClose
                  </td>
                  <td
                    className="css-1qcb1f7 e6fp4ir0"
                  >
                    <span>
                      func
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    -
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    <span
                      style={
                        Object {
                          "color": "#22a",
                          "wordBreak": "break-word",
                        }
                      }
                    >
                      null
                    </span>
                  </td>
                  <td
                    className="css-11b5gui e6fp4ir0"
                  >
                    
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
